{{>partial_header}}
using System;
using RestSharp;

namespace {{packageName}}.Client
{
    /// <summary>
    /// API Exception
    /// </summary>
    public class ApiException : Exception
    {
        /// <summary>
        /// Gets or sets the error code (HTTP status code)
        /// </summary>
        /// <value>The error code (HTTP status code).</value>
        public int ErrorCode { get; set; }

        /// <summary>
        /// Gets or sets the request
        /// </summary>
        /// <value>The http request that generated the error.</value>
        public IRestRequest Request { get; set; }

        /// <summary>
        /// Gets or sets the request
        /// </summary>
        /// <value>The http response containing the generated error.</value>
        public IRestResponse Response { get; set; }

        /// <summary>
        /// Initializes a new instance of the <see cref="ApiException"/> class.
        /// </summary>
        public ApiException() {}

        /// <summary>
        /// Initializes a new instance of the <see cref="ApiException"/> class.
        /// </summary>
        /// <param name="errorCode">HTTP status code.</param>
        /// <param name="message">Error message.</param>
        public ApiException(int errorCode, string message) : base(message)
        {
            this.ErrorCode = errorCode;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ApiException"/> class.
        /// </summary>
        /// <param name="errorCode">HTTP status code.</param>
        /// <param name="message">Error message.</param>
        /// <param name="errorContent">Error content.</param>
        public ApiException(int errorCode, string message, IRestRequest request, IRestResponse response) : base(message)
        {
          this.ErrorCode = errorCode;
          this.Request = request;
          this.Response = response;
        }
    }

}
