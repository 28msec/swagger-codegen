using System;
using System.IO;
using System.Collections.Generic;
using RestSharp;
using ExcelDna.Integration;
using {{packageName}}.Client;
{{#hasImport}}using {{packageName}}.Model;
{{/hasImport}}

namespace {{packageName}}.Api
{
    {{#operations}}
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public class {{classname}}
    {

        private static object defaultErrorHandler(Exception ex)
        {
            System.IO.StreamWriter file = new System.IO.StreamWriter("c:\\excelLog.txt", true);
            file.WriteLine("{0}", ex);
            file.Close();
            return "ERROR";
        }

        {{#operation}}
        /// <summary>
        /// {{summary}} {{notes}}
        /// </summary>
        /// <param name="basePath">A URL to a specific endpoint, e.g. http://domain/v1/_queries/public</param> 
        {{#allParams}}/// <param name="{{paramName}}">{{description}}</param> 
        {{/allParams}}/// <returns>{{#returnType}}{{^returnContainer}}{{{returnType}}}{{/returnContainer}}{{/returnType}}</returns>            
        [ExcelFunction(Name = "{{nickname}}", Category = "{{packageName}} / {{classname}}", Description = "{{summary}}")]
        public static {{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}void{{/returnType}} {{nickname}} (
          string basePath,
          {{#allParams}}{{{dataType}}} {{paramName}}{{^required}} = {{defaultValue}}{{/required}}{{#hasMore}}, {{/hasMore}}
          {{/allParams}})
        {
            try
            {
                CellStore.Api.{{classname}} api = ApiClients.get{{classname}}Client(basePath);
                return api.{{nickname}}(
                  {{#allParams}}{{paramName}}{{#hasMore}}, 
                  {{/hasMore}}{{/allParams}});
            }
            catch (Exception e)
            {
                Console.WriteLine("{0} Exception caught.", e);
                defaultErrorHandler(e);
                return 0;
            }
        }
        {{/operation}}
    }
    {{/operations}}
}
